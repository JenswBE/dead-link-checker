name: Build multi arch Docker
on:
  push:
    branches: [master]

env:
  DOCKER_HUB_USER: jenswbebot
  DOCKER_HUB_REPO: jenswbe/dead-link-checker
  DOCKER_CLI_EXPERIMENTAL: enabled
  PLATFORMS: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"
        
      - name: Install dependencies
        run: |
          python -m pip install -U pip wheel
          pip install -r requirements.txt

      - name: Run pytest
        run: |
          pytest --cov=delic --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install latest Docker version
        run: |
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
          sudo apt-get update
          sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce docker-ce-cli containerd.io

      - name: Setup multiarch builds
        run: |
          docker run --rm --privileged docker/binfmt:66f9012c56a8316f9244ffd7622d7c21c1f6f28d
          docker buildx create --name multiarch
          docker buildx use multiarch
          docker buildx inspect --bootstrap

      - name: Login to Docker Hub
        run: docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
        env:
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build Docker images
        run: docker buildx build --platform ${PLATFORMS} --push -t ${DOCKER_HUB_REPO} .