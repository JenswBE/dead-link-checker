name: Test, build and publish
on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:

env:
  GO_VERSION: "1.18" # Also update Dockerfile when bumping
  DOCKER_HUB_USER: jenswbebot
  DOCKER_HUB_REPO: jenswbe/dead-link-checker
  PLATFORMS: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Derive docker_tag
        id: vars
        shell: python
        run: |
          import os
          tag = os.environ['GITHUB_REF'].split('/').pop()
          if tag == 'main':
            tag = 'latest'
          print(f"::set-output name=docker_tag::{tag}")

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Run exhaustive
        run: |
          go install github.com/nishanths/exhaustive/...@latest
          exhaustive ./...

      - name: Run govulncheck
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      - name: Start E2E services
        working-directory: e2e
        run: |
          docker compose up -d
          sleep 5s

      - name: Run E2E tests
        working-directory: e2e
        run: go test --tags e2e ./...

      - name: Set up QEMU
        if: github.event_name == 'push'
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: github.event_name == 'push'
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        if: github.event_name == 'push'
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ env.DOCKER_HUB_REPO }}:${{ steps.vars.outputs.docker_tag }}

      - name: Update repo description
        if: github.event_name == 'push'
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ env.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          repository: ${{ env.DOCKER_HUB_REPO }}
